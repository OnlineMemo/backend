<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- spring property -->
    <springProperty name="AWS_ACCESS_KEY" source="cloud.aws.credentials.accessKey"/>
    <springProperty name="AWS_SECRET_KEY" source="cloud.aws.credentials.secretKey"/>
    <springProperty name="SLACK_WEBHOOK_URI_ERROR_500" source="logging.slack.webhook-url.error-500"/>
    <springProperty name="SLACK_WEBHOOK_URI_OPENAI_429" source="logging.slack.webhook-url.openai-429"/>
    <springProperty name="SLACK_WEBHOOK_URI_WARN_OOM" source="logging.slack.webhook-url.warn-oom"/>

    <!-- common variable -->
    <property name="PROJECT_PACKAGE" value="com.shj.onlinememospringproject"/>
    <property name="LOCAL_LOGS_PATH" value="./logs"/>
    <property name="COMMON_MESSAGE" value="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} / %msg"/>
    <property name="DIVIDER_MESSAGE" value="---------------------------------------------------------------------------"/>

    <!-- encoder pattern -->
    <property name="CONSOLE_PATTERN" value="${COMMON_MESSAGE}%n${DIVIDER_MESSAGE}%n"/>
    <property name="LOCAL_PATTERN" value="${COMMON_MESSAGE}%n${DIVIDER_MESSAGE}%n%n"/>
    <property name="CLOUDWATCH_PATTERN" value="${COMMON_MESSAGE}"/>
    <property name="SLACK_PATTERN" value="${COMMON_MESSAGE}"/>


    <!-- ================== Console Appender (Print) ================== -->

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_PATTERN}</pattern> <!-- %.-160msg%n${DIVIDER_MESSAGE}%n -->
        </encoder>
    </appender>


    <!-- ==================== Local Appender (File) ==================== -->

    <appender name="LOCAL-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOCAL_LOGS_PATH}/log_error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOCAL_LOGS_PATH}/store_error/log_error_%d{yyyy-MM-dd, ${logback.timezone:-Asia/Seoul}}_%i.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>30MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>7</maxHistory>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${LOCAL_PATTERN}</pattern>
        </encoder>
    </appender>


    <!-- ============ Production Appender (AWS CloudWatch) ============ -->

    <appender name="CLOUDWATCH-ERROR" class="ca.pjer.logback.AwsLogsAppender">
        <layout>
            <pattern>${CLOUDWATCH_PATTERN}</pattern>
        </layout>
        <logGroupName>onlinememo/error-log</logGroupName>
        <logStreamUuidPrefix>onlinememo-error-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>50</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>7</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>

    <appender name="CLOUDWATCH-SCHEDULER" class="ca.pjer.logback.AwsLogsAppender">
        <layout>
            <pattern>${CLOUDWATCH_PATTERN}</pattern>
        </layout>
        <logGroupName>onlinememo/scheduler-log</logGroupName>
        <logStreamUuidPrefix>onlinememo-scheduler-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>1</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>7</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>

    <appender name="CLOUDWATCH-ADMIN" class="ca.pjer.logback.AwsLogsAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter"> <!-- filter by Marker -->
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>ADMIN_LOG</marker>
            </evaluator>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <layout>
            <pattern>${CLOUDWATCH_PATTERN}</pattern>
        </layout>
        <logGroupName>onlinememo/admin-log</logGroupName>
        <logStreamUuidPrefix>onlinememo-admin-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>1</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>7</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>


    <!-- ================= Production Appender (Slack Webhook) ================= -->

    <appender name="SLACK-ERROR-500" class="com.github.maricn.logback.SlackAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter"> <!-- filter by Marker -->
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>ERROR_500_LOG</marker>
            </evaluator>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <webhookUri>${SLACK_WEBHOOK_URI_ERROR_500}</webhookUri>
        <channel>#error-500</channel>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${SLACK_PATTERN}</pattern>
        </layout>
        <username>Alarm-Error500</username>
        <iconEmoji>:firecracker:</iconEmoji>
        <colorCoding>true</colorCoding>
    </appender>

    <appender name="SLACK-OPENAI-429" class="com.github.maricn.logback.SlackAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter"> <!-- filter by Marker -->
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>OPENAI_429_LOG</marker>
            </evaluator>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <webhookUri>${SLACK_WEBHOOK_URI_OPENAI_429}</webhookUri>
        <channel>#openai-429</channel>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${SLACK_PATTERN}</pattern>
        </layout>
        <username>Alarm-OpenAI429</username>
        <iconEmoji>:robot:</iconEmoji>
        <colorCoding>true</colorCoding>
    </appender>

    <appender name="SLACK-WARN-OOM" class="com.github.maricn.logback.SlackAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter"> <!-- filter by Marker -->
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>WARN_OOM_LOG</marker>
            </evaluator>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <webhookUri>${SLACK_WEBHOOK_URI_WARN_OOM}</webhookUri>
        <channel>#warn-oom</channel>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${SLACK_PATTERN}</pattern>
        </layout>
        <username>Alarm-WarnOOM</username>
        <iconEmoji>:robot:</iconEmoji>
        <colorCoding>true</colorCoding>
    </appender>


    <!-- ============================================================== -->

    <!-- Console -->
    <springProfile name="local,prod">
        <root level="error"> <!-- <logger name="${PROJECT_PACKAGE}.response" level="error">same</logger> -->
            <appender-ref ref="CONSOLE" />
        </root>
    </springProfile>

    <!-- Local -->
    <springProfile name="local">
        <logger name="${PROJECT_PACKAGE}.response" level="error">
            <appender-ref ref="LOCAL-ERROR" />
        </logger>
    </springProfile>

    <!-- Production (CloudWatch & Slack) -->
    <springProfile name="prod">
        <logger name="${PROJECT_PACKAGE}.response" level="error">
            <appender-ref ref="CLOUDWATCH-ERROR" />
            <appender-ref ref="SLACK-ERROR-500" />
            <appender-ref ref="SLACK-OPENAI-429" />
        </logger>
        <logger name="${PROJECT_PACKAGE}.service.BackOfficeScheduler" level="warn">
            <appender-ref ref="SLACK-WARN-OOM" />
        </logger>
        <logger name="${PROJECT_PACKAGE}.repository.Ga4FilteredBatchRepository" level="info">
            <appender-ref ref="CLOUDWATCH-SCHEDULER" />
        </logger>
        <logger name="${PROJECT_PACKAGE}.service.impl.AuthServiceImpl" level="info">
            <appender-ref ref="CLOUDWATCH-ADMIN" />
        </logger>
    </springProfile>
</configuration>