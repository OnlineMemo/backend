<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <springProperty name="AWS_ACCESS_KEY" source="cloud.aws.credentials.accessKey"/>
    <springProperty name="AWS_SECRET_KEY" source="cloud.aws.credentials.secretKey"/>
    <property name="LOCAL_LOGS_PATH" value="./logs"/>
    <property name="LOGS_DIVIDER" value="---------------------------------------------------------------------------"/>


    <!-- ====================== Console Log ====================== -->

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} / %msg%n${LOGS_DIVIDER}%n</pattern> <!-- %.-160msg%n${LOGS_DIVIDER}%n -->
        </encoder>
    </appender>


    <!-- ======================= Local Log ======================= -->

    <appender name="LOCAL-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOCAL_LOGS_PATH}/log_error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOCAL_LOGS_PATH}/store_error/log_error_%d{yyyy-MM-dd, ${logback.timezone:-Asia/Seoul}}_%i.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>30MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>7</maxHistory>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} / %msg%n${LOGS_DIVIDER}%n%n</pattern>
        </encoder>
    </appender>

    <appender name="LOCAL-SCHEDULER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOCAL_LOGS_PATH}/log_scheduler.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOCAL_LOGS_PATH}/store_scheduler/log_scheduler_%d{yyyy-MM-dd, ${logback.timezone:-Asia/Seoul}}_%i.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>30MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>7</maxHistory>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} / %msg%n${LOGS_DIVIDER}%n%n</pattern>
        </encoder>
    </appender>

    <appender name="LOCAL-ADMIN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOCAL_LOGS_PATH}/log_admin.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOCAL_LOGS_PATH}/store_admin/log_admin_%d{yyyy-MM-dd, ${logback.timezone:-Asia/Seoul}}_%i.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>30MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>7</maxHistory>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>ADMIN_LOG</marker>
            </evaluator>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <encoder>
            <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} / %msg%n${LOGS_DIVIDER}%n%n</pattern>
        </encoder>
    </appender>


    <!-- ============ Production Log (AWS CloudWatch) ============ -->

    <appender name="CLOUDWATCH-ERROR" class="ca.pjer.logback.AwsLogsAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <layout>
            <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} / %msg</pattern>
        </layout>
        <logGroupName>onlinememo/error-log</logGroupName>
        <logStreamUuidPrefix>onlinememo-error-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>50</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>7</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>

    <appender name="CLOUDWATCH-SCHEDULER" class="ca.pjer.logback.AwsLogsAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <layout>
            <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} / %msg</pattern>
        </layout>
        <logGroupName>onlinememo/scheduler-log</logGroupName>
        <logStreamUuidPrefix>onlinememo-scheduler-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>1</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>7</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>

    <appender name="CLOUDWATCH-ADMIN" class="ca.pjer.logback.AwsLogsAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>ADMIN_LOG</marker>
            </evaluator>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <layout>
            <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} / %msg</pattern>
        </layout>
        <logGroupName>onlinememo/admin-log</logGroupName>
        <logStreamUuidPrefix>onlinememo-admin-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>1</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>7</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>


    <!-- ========================================================= -->

    <springProfile name="local,prod">
<!--        <logger name="com.shj.onlinememospringproject.response" level="error">-->
<!--            <appender-ref ref="CONSOLE" />-->
<!--        </logger>-->
        <root level="error">
            <appender-ref ref="CONSOLE" />
        </root>
    </springProfile>

    <springProfile name="local">
        <logger name="com.shj.onlinememospringproject.response" level="error">
            <appender-ref ref="LOCAL-ERROR" />
        </logger>
        <logger name="com.shj.onlinememospringproject.repository.Ga4FilteredBatchRepository" level="info">
            <appender-ref ref="LOCAL-SCHEDULER" />
        </logger>
        <logger name="com.shj.onlinememospringproject.service" level="info">
            <appender-ref ref="LOCAL-ADMIN" />
        </logger>
    </springProfile>

    <springProfile name="prod">
        <logger name="com.shj.onlinememospringproject.response" level="error">
            <appender-ref ref="CLOUDWATCH-ERROR" />
        </logger>
        <logger name="com.shj.onlinememospringproject.repository.Ga4FilteredBatchRepository" level="info">
            <appender-ref ref="CLOUDWATCH-SCHEDULER" />
        </logger>
        <logger name="com.shj.onlinememospringproject.service" level="info">
            <appender-ref ref="CLOUDWATCH-ADMIN" />
        </logger>
    </springProfile>
</configuration>