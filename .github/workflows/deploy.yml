name: Production CI/CD

## < CI/CD 실행 준비 >
# 1. submodule 환경변수 최신화 :
#    git submodule update --remote
#    git add .
#    git commit -m "[#이슈번호] Setting: Git Submodule 최신화"
#    git push
# 2. master -> deploy 워크플로 트리거 :
#    git checkout deploy
#    git merge master
#    git push

## < private/public 환경변수 분리 >
# 1. githubActions secrets (민감 정보) :
#    SUBMODULE_GITHUB_TOKEN, AWS_ACCESS_KEY_ID,
#    AWS_SECRET_ACCESS_KEY, SLACK_WEBHOOK_URL_CICD
# 2. dotenv env (공개 가능) :
#    AWS_EB_APPLICATION_NAME, AWS_EB_ENVIRONMENT_NAME,
#    AWS_EB_REGION, SLACK_CHANNEL_ID_CICD

on:
  push:
    branches: [ deploy ]
  workflow_dispatch:  # Github UI 수동 실행도 가능

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      ### Set Up ###
      - name: Checkout Submodule
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SUBMODULE_GITHUB_TOKEN }}  # githubActions secrets (private)
          submodules: true
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      ### Workflow Env ###
      - name: Load .env file
        uses: aarcangeli/load-dotenv@v1
        with:
          path: 'backend-submodule'
          filenames: 'deploy.env'
          quiet: true

      ### Build ZIP ###
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build bootJar & deploy.zip
        run: ./gradlew bootJar

      ### Time & Commit Number ###
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-ksttime
        with:
          format: YYYYMMDD-HHmmss
          utcOffset: "+09:00"  # KST time = UTC time + 9hour
      - name: Get Short CommitNumber
        id: short-commitnumber
        run: echo "commitnumber=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      ### AWS Elastic Beanstalk ###
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.AWS_EB_APPLICATION_NAME }}  # dotenv env (public)
          environment_name: ${{ env.AWS_EB_ENVIRONMENT_NAME }}
          version_label: "githubActions_${{ steps.current-ksttime.outputs.formattedTime }}_commit-${{ steps.short-commitnumber.outputs.commitnumber }}"
          region: ${{ env.AWS_EB_REGION }}
          deployment_package: deploy/deploy.zip
          wait_for_deployment: false

      ### Slack Alarm for success deploy ###
      - name: Notify Slack on Success
        if: success()
        id: slack-success
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": ${{ env.SLACK_CHANNEL_ID_CICD }},
              "attachments": [
                {
                  "color": "#36a64f",
                  "title": ":white_check_mark:  Success CI/CD",
                  "title_link": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "text": "'${{ github.actor }}'의 배포가 성공했습니다.",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Commit",
                      "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.event.head_commit.message || '커밋 메시지 없음' }}>",
                      "short": true
                    }
                  ]      
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_CICD }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      ### Slack Alarm for fail deploy ###
      - name: Notify Slack on Failure
        if: failure()
        id: slack-failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": ${{ env.SLACK_CHANNEL_ID_CICD }},
              "attachments": [
                {
                  "color": "#ff0000",
                  "title": ":x:  Fail CI/CD",
                  "title_link": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "text": "'${{ github.actor }}'의 배포가 실패했습니다.",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Commit",
                      "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.event.head_commit.message || '커밋 메시지 없음' }}>",
                      "short": true
                    }
                  ]      
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_CICD }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK